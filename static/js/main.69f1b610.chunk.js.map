{"version":3,"sources":["serviceWorker.js","navbar/Navbar.js","App.js","tools/Converter.js","tools/Generator.js","datetool/DateHelper.js","commons/CopyInput.js","datetool/DateOutput.js","datetool/DateCalculator.js","datetool/DateTool.js","decoder/Base64Decoder.js","formatter/Formatter.js","formatter/JSONFormatter.js","formatter/XMLFormatter.js","index.js"],"names":["Boolean","window","location","hostname","match","NavItem","props","pageURI","pathname","search","liClassName","path","aClassName","disabled","className","href","name","NavDropdown","state","isToggleOn","e","preventDefault","this","setState","prevState","classDropdownMenu","id","role","data-toggle","aria-haspopup","aria-expanded","onClick","showDropdown","aria-labelledby","children","React","Component","Navbar","type","data-target","aria-controls","aria-label","process","App","Converter","Generator","handleInputChange","generateHash","target","value","func","handleFunctionChange","input","output","console","debug","md5","sha1","sha256","sha512","rows","ref","textInput","onChange","readOnly","formatDate","timestamp","format","d","parseInt","Date","indexOf","replace","padZero","getUTCDate","getUTCMonth","getUTCFullYear","getUTCHours","getUTCMinutes","getUTCSeconds","st","addMonth","date","months","getTime","n","getDate","setDate","setMonth","getMonth","Math","min","year","getFullYear","month","isLeapYear","getDaysInMonth","isValidTimestamp","ts","newTimestamp","isNaN","parseFloat","isFinite","CopyInput","copyText","refs","select","document","execCommand","text","style","width","defaultValue","DateOutput","time","datetime","weekdays","Array","timeOut","timeString","secondsSinceMidnight","dayStart","dayEnd","weekday","timeStringLocale","getTimezoneOffset","getDay","defaultProps","DateCalculator","addendPlus","bind","addendMinus","newStateAddend","val","changeAddend","unit","stringPlus","stringMinus","DateTool","handleBaseTimeChange","setBaseTime","handleDateStringChange","baseTimeString","dateString","dateArray","exec","UTC","parseDate","baseTime","baseTimeInput","baseTimeInputValid","dateInputValid","diff","addends","seconds","minutes","hours","days","weeks","years","setBaseTimeNow","startCalculation","resetCalculator","inputBaseTime","focus","newBaseTime","timestampNow","recalculateTarget","addend","change","currentDate","currentDateY","targetDateY","setFullYear","classNameBaseInput","classNameDateStringInput","reset","Base64Decoder","encodeDecodeOutput","option","handleOptionChange","inputValid","atob","btoa","classNameInput","htmlFor","checked","Formatter","formatOutput","language","setInitialValue","cleanedInput","JSONFormatter","jsonObj","JSON","stringify","undefined","jsonString","cls","test","cleanInput","parse","prettyPrint","XMLFormatter","xml","formatted","indent","split","forEach","node","substring","length","routing","basename","exact","component","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.69f1b610.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\n\r\n// https://m.pardel.net/react-and-bootstrap-4-part-1-setup-navigation-d4767e2ed9f0\r\n// Functional component without state\r\n// <!--<Link to={`${process.env.PUBLIC_URL}/page-path`}>…</Link>-->\r\nconst NavItem = props => {\r\n    const pageURI = window.location.pathname+window.location.search;\r\n    const liClassName = (props.path === pageURI) ? \"nav-item active\" : \"nav-item\";\r\n    const aClassName = props.disabled ? \"nav-link disabled\" : \"nav-link\";\r\n    return (\r\n        <li className={liClassName}>\r\n            <a href={props.path} className={aClassName}>\r\n                {props.name}\r\n                {(props.path === pageURI) ? (<span className=\"sr-only\">(current)</span>) : ''}\r\n            </a>\r\n        </li>\r\n    );\r\n};\r\n\r\n\r\n\r\nclass NavDropdown extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isToggleOn: false\r\n        };\r\n    }\r\n    showDropdown(e) {\r\n        e.preventDefault();\r\n        this.setState(prevState => ({\r\n            isToggleOn: !prevState.isToggleOn\r\n        }));\r\n    }\r\n    render() {\r\n        const classDropdownMenu = 'dropdown-menu' + (this.state.isToggleOn ? ' show' : '')\r\n        return (\r\n            <li className=\"nav-item dropdown\">\r\n                <a className=\"nav-link dropdown-toggle\" href=\"/\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\"\r\n                   aria-haspopup=\"true\" aria-expanded=\"false\"\r\n                   onClick={(e) => {this.showDropdown(e)}}>\r\n                    {this.props.name}\r\n                </a>\r\n                <div className={classDropdownMenu} aria-labelledby=\"navbarDropdown\">\r\n                    {this.props.children}\r\n                </div>\r\n            </li>\r\n        )\r\n    }\r\n}\r\n\r\nexport class Navbar extends React.Component {\r\n    render() {\r\n\r\n        const appName = \"Utils\";\r\n        //const pages = ['dates', 'converter', 'beautifier'];\r\n\r\n        return (\r\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n                <a className=\"navbar-brand\" href=\"/\">{appName}</a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"/>\r\n                </button>\r\n\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav mr-auto\">\r\n\r\n                        <NavItem path=\"/\" name=\"Home\" />\r\n                        <NavItem path={`${process.env.PUBLIC_URL}/datetool`} name=\"Date Tool\" />\r\n                        <NavItem path={`${process.env.PUBLIC_URL}/base64decoder`} name=\"Base64-Decoder\" />\r\n                        <NavItem path={`${process.env.PUBLIC_URL}/generator`} name=\"Hash Generator\" />\r\n\r\n                        <NavDropdown name=\"Formatter\">\r\n                            <a className=\"dropdown-item\" href={`${process.env.PUBLIC_URL}/json`}>JSON</a>\r\n                            <a className=\"dropdown-item\" href={`${process.env.PUBLIC_URL}/xml`}>XML</a>\r\n                        </NavDropdown>\r\n\r\n                    </ul>\r\n                    {/* <form className=\"form-inline my-2 my-lg-0\">\r\n                        <input className=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n                        <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\r\n                    </form> */}\r\n                </div>\r\n\r\n            </nav>\r\n\r\n        )\r\n    };\r\n}\r\n\r\nexport default Navbar;","import React, { Component } from 'react';\n//import logo from './logo.svg';\nimport './App.css';\nimport {Navbar} from './navbar/Navbar.js';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"\">\n\n        <Navbar />\n          <div className=\"container\">\n            <h2>Utils</h2>\n\n              Eine Sammlung von Entwicklertools und eine Testapplikation für ReactJS.\n<br/><br/>\n              V 0.1.1\n\n          </div>\n\n        {/*<header className=\"App-header\">*/}\n          {/*<img src={logo} className=\"App-logo\" alt=\"logo\" />*/}\n          {/*<p>*/}\n            {/*Edit <code>src/App.js</code> and save to reload.*/}\n          {/*</p>*/}\n          {/*<a*/}\n            {/*className=\"App-link\"*/}\n            {/*href=\"https://reactjs.org\"*/}\n            {/*target=\"_blank\"*/}\n            {/*rel=\"noopener noreferrer\"*/}\n          {/*>*/}\n            {/*Learn React*/}\n          {/*</a>*/}\n        {/*</header>*/}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react'\r\nimport Navbar from \"../navbar/Navbar\";\r\n\r\n\r\nclass Converter extends React.Component {\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <Navbar/>\r\n\r\n                <div className=\"container\">\r\n\r\n                    <h2>Converter</h2>\r\n                </div>\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\nexport default Converter","import React from 'react'\r\nimport Navbar from \"../navbar/Navbar\";\r\nimport md5 from 'crypto-js/md5';\r\nimport sha1 from 'crypto-js/sha1';\r\nimport sha256 from 'crypto-js/sha256';\r\nimport sha512 from 'crypto-js/sha512';\r\n\r\nclass Generator extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            input: \"\",\r\n            output: \"\",\r\n            func: \"sha256\"\r\n        };\r\n    }\r\n\r\n    handleInputChange = (e) => {\r\n        this.generateHash(e.target.value, this.state.func);\r\n    };\r\n\r\n    handleFunctionChange = (e) => {\r\n        this.generateHash(this.state.input, e.target.value);\r\n    };\r\n\r\n    generateHash (input, func) {\r\n        console.debug(\"generate hash!?  \", input, func);\r\n        let output = \"\";\r\n        switch (func) {\r\n            case \"md5\":\r\n                output = md5(input);\r\n                break;\r\n            case \"sha1\":\r\n                output = sha1(input);\r\n                break;\r\n            case \"sha256\":\r\n                output = sha256(input);\r\n                break;\r\n            case \"sha512\":\r\n                output = sha512(input);\r\n                break;\r\n            \r\n            default:\r\n                break;\r\n        }\r\n        console.debug(\"set tstate\", output);\r\n        this.setState({input: input, output: output, func: func});\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <Navbar/>\r\n\r\n                <div className=\"container\">\r\n\r\n                    <h2>Hash Generator</h2>\r\n\r\n                    Input:\r\n                    <div className=\"form-group\">\r\n                        <textarea id=\"generatorInput\"\r\n                                  rows=\"10\"\r\n                                  className=\"form-control\"\r\n                                  ref={(input) => { this.textInput = input; }}\r\n                                  value={this.state.input}\r\n                                  onChange={this.handleInputChange}/>\r\n                    </div>\r\n\r\n                    Hash function: &nbsp;\r\n                    <select onChange={this.handleFunctionChange} value={this.state.func}>\r\n                        <option value=\"md5\">MD5</option>\r\n                        <option value=\"sha1\">SHA1</option>\r\n                        <option value=\"sha256\">SHA256</option>\r\n                        <option value=\"sha512\">SHA512</option>\r\n                    </select>\r\n                    <br/>\r\n\r\n\r\n                    <div className=\"form-group\">\r\n                        <br/>\r\n                        <textarea id=\"generatorOutput\"\r\n                                  className=\"form-control\"\r\n                                  rows=\"10\"\r\n                                  readOnly \r\n                                  value={this.state.output}/>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\nexport default Generator","\r\n\r\nexport function formatDate(timestamp, format) {\r\n    let d;\r\n    // formatDateTime: function(timestamp, format, utc) {\r\n    timestamp = parseInt(timestamp);\r\n    if (!timestamp || timestamp <= 0)\r\n        return 'invalid';\r\n\r\n\r\n    d = new Date(timestamp * 1000);\r\n\r\n    if (!format)\r\n        format = 'dd.MM.yyyy hh:mm:ss';\r\n\r\n    if (format.indexOf('dd') > -1)\r\n        format = format.replace('dd', padZero(d.getUTCDate()));\r\n    if (format.indexOf('d') > -1)\r\n        format = format.replace('d', d.getUTCDate());\r\n    if (format.indexOf('MM') > -1)\r\n        format = format.replace('MM', padZero(d.getUTCMonth() + 1));\r\n    if (format.indexOf('M') > -1)\r\n        format = format.replace('M', d.getUTCMonth() + 1);\r\n    if (format.indexOf('yyyy') > -1)\r\n        format = format.replace('yyyy', d.getUTCFullYear());\r\n    if (format.indexOf('hh') > -1)\r\n        format = format.replace('hh', padZero(d.getUTCHours()));\r\n    if (format.indexOf('h') > -1)\r\n        format = format.replace('h', d.getUTCHours());\r\n    if (format.indexOf('mm') > -1)\r\n        format = format.replace('mm', padZero(d.getUTCMinutes()));\r\n    if (format.indexOf('m') > -1)\r\n        format = format.replace('m', d.getUTCMinutes());\r\n    if (format.indexOf('ss') > -1)\r\n        format = format.replace('ss', padZero(d.getUTCSeconds()));\r\n    if (format.indexOf('s') > -1)\r\n        format = format.replace('s', d.getUTCSeconds());\r\n    return format;\r\n}\r\n\r\n\r\nfunction padZero (st) {\r\n    if (st < 10)\r\n        return '0' + st;\r\n    return st;\r\n}\r\n\r\n\r\n/*\r\n * Addiert eine anzahl 'months' zum übergebenen Datum und liefert ein Date zurück\r\n *\r\n * // https://stackoverflow.com/questions/5645058/how-to-add-months-to-a-date-in-javascript\r\n */\r\nexport function addMonth(date, months) {\r\n    let target = new Date(date.getTime());\r\n    let n = date.getDate();\r\n    target.setDate(1);\r\n    target.setMonth(date.getMonth() + months);\r\n    target.setDate(Math.min(n, getDaysInMonth(target)));\r\n    return target;\r\n}\r\n\r\nfunction isLeapYear (year) {\r\n    return (((year % 4 === 0) && (year % 100 !== 0)) || (year % 400 === 0));\r\n}\r\n\r\n\r\nfunction getDaysInMonth (date) {\r\n    const year = date.getFullYear();\r\n    const month = date.getMonth();\r\n    let days = [31, (isLeapYear(year) ? 29 : 28), 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\n    return days[month];\r\n}\r\n\r\n\r\nexport function isValidTimestamp(ts) {\r\n    const newTimestamp = new Date(ts*1).getTime();\r\n    return isNumeric(newTimestamp) && newTimestamp <= 999999999999;\r\n}\r\n\r\nfunction isNumeric(n) {\r\n    return !isNaN(parseFloat(n)) && isFinite(n);\r\n}\r\n\r\n/* Parst ein Datum im Format \"dd.MM.yyyy HH:mm:ss\"\r\n * Liefert ein Date, wenn die Eingabe gültig ist\r\n * Liefert null, wenn die Eingabe ungültig ist\r\n */\r\nexport function parseDate(dateString) {\r\n    console.debug(\"parse \" + dateString);\r\n\r\n    const regex = /(\\d{2}).(\\d{2}).(\\d{4}) (\\d{2}):(\\d{2}):(\\d{2})/;\r\n    const dateArray = regex.exec(dateString);\r\n\r\n    if (dateArray == null) {\r\n        console.debug(\"UNGÜLTIG\");\r\n        return null;\r\n    }\r\n    //new Date(year, monthIndex [, day [, hour [, minutes [, seconds [, milliseconds]]]]]);\r\n    return new Date(Date.UTC(\r\n            (+dateArray[3]),\r\n            (+dateArray[2])-1, // Careful, month starts at 0!\r\n            (+dateArray[1]),\r\n            (+dateArray[4]),\r\n            (+dateArray[5]),\r\n            (+dateArray[6])\r\n        ));\r\n\r\n    // var dateString = \"2010-08-09 01:02:03\";\r\n    //     // var regex = /(\\d{4})-(\\d{2})-(\\d{2}) (\\d{2}):(\\d{2}):(\\d{2})/;\r\n    //     // var dateArray = regex.exec(dateString);\r\n    //     // console.debug(dateArray);\r\n    //     // // return new Date(\r\n    //     // //     (+dateArray[1]),\r\n    //     // //     (+dateArray[2])-1, // Careful, month starts at 0!\r\n    //     // //     (+dateArray[3]),\r\n    //     // //     (+dateArray[4]),\r\n    //     // //     (+dateArray[5]),\r\n    //     // //     (+dateArray[6])\r\n    //     // // );\r\n}\r\n// Date.isLeapYear = function (year) {\r\n//     return (((year % 4 === 0) && (year % 100 !== 0)) || (year % 400 === 0));\r\n// };\r\n//\r\n// Date.getDaysInMonth = function (year, month) {\r\n//     return [31, (Date.isLeapYear(year) ? 29 : 28), 31, 30, 31, 30, 31, 31, 30, 31, 30, 31][month];\r\n// };\r\n//\r\n// Date.prototype.isLeapYear = function () {\r\n//     return Date.isLeapYear(this.getFullYear());\r\n// };\r\n//\r\n// Date.prototype.getDaysInMonth = function () {\r\n//     return Date.getDaysInMonth(this.getFullYear(), this.getMonth());\r\n// };\r\n//\r\n// Date.prototype.addMonths = function (value) {\r\n//     var n = this.getDate();\r\n//     this.setDate(1);\r\n//     this.setMonth(this.getMonth() + value);\r\n//     this.setDate(Math.min(n, this.getDaysInMonth()));\r\n//     return this;\r\n// };","import React, { Component } from 'react';\n\nexport default class CopyInput extends Component {\n    copyText = () => {\n        this.refs.input.select();\n\n        document.execCommand('copy');\n\n        return false;\n    }\n\n    render () {\n        const text = this.props.text;\n\n        console.debug(this.state);\n        return (\n\n            <div className=\"input-group input-group-sm mb-3\" style={{width:'195px'}}>\n                <input ref=\"input\" type=\"text\" defaultValue={text} readOnly className=\"form-control form-control-sm\" \n                aria-label=\"date\"/>\n                <div className=\"input-group-append\">\n                    <button className=\"btn btn-sm btn-outline-secondary\" type=\"button\" onClick={ this.copyText }>copy</button>\n                </div>\n             </div>\n             \n\n\n        )\n    }\n}\n\n","import React from 'react'\r\nimport {formatDate} from './DateHelper';\r\nimport CopyInput from '../commons/CopyInput';\r\n\r\n\r\nexport class DateOutput extends React.Component {\r\n    render() {\r\n        let time = this.props.datetime;\r\n\r\n\r\n\r\n        const day = 86400;\r\n        const weekdays = new Array(7);\r\n        weekdays[0] =  \"Sunday\";\r\n        weekdays[1] = \"Monday\";\r\n        weekdays[2] = \"Tuesday\";\r\n        weekdays[3] = \"Wednesday\";\r\n        weekdays[4] = \"Thursday\";\r\n        weekdays[5] = \"Friday\";\r\n        weekdays[6] = \"Saturday\";\r\n\r\n\r\n        // init\r\n        let timeOut = \"\";\r\n        let timeString = \"\";\r\n        let secondsSinceMidnight = \"\";\r\n        let dayStart = \"\";\r\n        let dayEnd = \"\";\r\n        let weekday = \"\";\r\n        let timeStringLocale = \"\";\r\n\r\n        if (time && time > 0) {\r\n            timeOut = time;\r\n            timeString = formatDate(time);\r\n\r\n            let offset = (new Date()).getTimezoneOffset() * 60;\r\n            timeStringLocale = formatDate(time-offset);\r\n\r\n            secondsSinceMidnight = time % day;\r\n            dayStart = time - secondsSinceMidnight;\r\n            dayEnd = dayStart + day;\r\n            let date = new Date(time * 1000);\r\n            weekday = weekdays[date.getDay()];\r\n        }\r\n\r\n\r\n\r\n        return (\r\n\r\n            <div className=\"dateOutput\">\r\n\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        Timestamp (UTC)\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <CopyInput text={timeOut}></CopyInput>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <b>UTC</b><br/>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <CopyInput text={timeString}></CopyInput>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        Local<br/>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <CopyInput text={timeStringLocale}></CopyInput>\r\n                    </div>\r\n                </div>\r\n\r\n                <br/>\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        Timestamp day start<br/>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <CopyInput text={dayStart}></CopyInput>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        Timestamp day end<br/>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <CopyInput text={dayEnd}></CopyInput>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        Sec. since midnight<br/>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <CopyInput text={secondsSinceMidnight}></CopyInput>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        Day of week<br/>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <CopyInput text={weekday}></CopyInput>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nDateOutput.defaultProps = {datetime: 0};\r\nexport default DateOutput","import React from \"react\";\r\n\r\nexport class DateCalculator extends React.Component {\r\n\r\n    //this.props.baseTime = 0;\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.addendPlus = this.addendPlus.bind(this);\r\n        this.addendMinus = this.addendMinus.bind(this);\r\n    }\r\n\r\n\r\n    addendPlus() {\r\n        let newStateAddend = this.props.val + 1;\r\n\r\n        this.props.changeAddend(newStateAddend, this.props.unit);\r\n    }\r\n\r\n    addendMinus() {\r\n        let newStateAddend = this.props.val - 1;\r\n        this.props.changeAddend(newStateAddend, this.props.unit);\r\n    }\r\n\r\n    render() {\r\n\r\n        let stringPlus = this.props.val > 0 ? (\"+\" + this.props.val) : \" \";\r\n        let stringMinus = this.props.val < 0 ? (this.props.val) : \" \";\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <button type=\"button\" className=\"btn btn-secondary\" onClick={this.addendMinus}>-</button>\r\n                    </div>\r\n                    <div className=\"col font-weight-bold\">\r\n                        {stringMinus}\r\n                    </div>\r\n                    <div className=\"col text-center\">\r\n                        {this.props.unit}\r\n                    </div>\r\n                    <div className=\"col font-weight-bold\">\r\n                        {stringPlus}\r\n                    </div>\r\n                    <div className=\"col text-right\" >\r\n                        <button type=\"button\" className=\"btn btn-secondary\" onClick={this.addendPlus}>+</button>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default DateCalculator","import React from 'react'\r\nimport Navbar from '../navbar/Navbar'\r\nimport DateOutput from \"./DateOutput\";\r\nimport DateCalculator from \"./DateCalculator\"\r\nimport {formatDate} from './DateHelper';\r\nimport {parseDate} from \"./DateHelper\";\r\nimport {addMonth} from './DateHelper';\r\nimport {isValidTimestamp} from './DateHelper';\r\n\r\n\r\nclass DateTool extends React.Component {\r\n\r\n    //this.props.baseTime = 0;\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            baseTime: null, // Parameter, mit dem gerechnet wird\r\n            baseTimeInput: \"\", // Inhalt Input (kann invalide sein)\r\n            baseTimeString: \"\", // String-Repräsentation von baseTime im Format DD.MM.YYYY HH:MM:SS\r\n            baseTimeInputValid: true,\r\n            dateInputValid: true,\r\n\r\n            diff: 0, // Seconds between BaseTime and TargetTime\r\n\r\n\r\n            addends: {\r\n                seconds: 0,\r\n                minutes: 0,\r\n                hours: 0,\r\n                days: 0,\r\n                weeks: 0,\r\n                months: 0,\r\n                years: 0\r\n            }\r\n        };\r\n\r\n        this.setBaseTimeNow = this.setBaseTimeNow.bind(this);\r\n        this.startCalculation = this.startCalculation.bind(this);\r\n        this.resetCalculator = this.resetCalculator.bind(this);\r\n\r\n\r\n        // this.inputBaseTime = React.createRef(); // wird im Render gemacht\r\n        //this.inputDateString = React.createRef();\r\n    }\r\n\r\n    //Focus on Input field immediately\r\n    componentDidMount(){\r\n        this.inputBaseTime.focus();\r\n    }\r\n\r\n    // handleBaseTimeChange (e) {  //<so ändert sich der scope, \"this\" ist nicht definiert\r\n    handleBaseTimeChange = (e) => {\r\n        this.setBaseTime(e.target.value * 1)\r\n    };\r\n\r\n    /* newBaseTime kann ein berechnet Wert sein (\"now\") oder ein invalider String\r\n     */\r\n    setBaseTime(newBaseTime) {\r\n\r\n        let baseTime = null;\r\n        let baseTimeInputValid = true;\r\n        let baseTimeString = \"\";\r\n\r\n        if (isValidTimestamp(newBaseTime)) {\r\n            baseTime = newBaseTime;\r\n            baseTimeString = formatDate(baseTime);\r\n        } else {\r\n            baseTime = '';\r\n            baseTimeInputValid = false;\r\n            newBaseTime = \"\";\r\n        }\r\n\r\n        this.setState({\r\n            baseTime: baseTime,\r\n            baseTimeInput: newBaseTime,\r\n            baseTimeInputValid: baseTimeInputValid,\r\n            baseTimeString: baseTimeString\r\n        });\r\n    }\r\n\r\n\r\n    handleDateStringChange = (e) => {\r\n        const baseTimeString = e.target.value;\r\n//        let date = Date.parse(baseTimeString, \"dd.MM.yyyy HH:mm:ss\");\r\n        let date = parseDate(baseTimeString);\r\n        //this.setState({baseTime: e.target.value, baseTimeString: baseTimeString});\r\n\r\n        if (date) {\r\n            this.setBaseTime(parseInt(date.getTime() / 1000));\r\n        } else {\r\n            this.setState({baseTimeString: baseTimeString});\r\n        }\r\n\r\n    };\r\n\r\n    startCalculation() {\r\n        this.setState({baseTime: this.state.baseTime, baseTimeString: formatDate(this.state.baseTime)});\r\n    }\r\n\r\n    setBaseTimeNow() {\r\n        //Normal:\r\n        //this.setState({baseTime: new Date().getTime()/1000});\r\n\r\n\r\n\r\n        //TODO: Not set state, but set input !\r\n\r\n        // const baseTime =;\r\n        //\r\n        //\r\n        // console.debug(this.inputBaseTime.current);\r\n        const timestampNow = parseInt(new Date().getTime() / 1000);\r\n        //this.inputBaseTime.current.value = timestampNow;\r\n        //this.setState({baseTimeInput: timestampNow}); // setzt Input Inhalt\r\n\r\n        this.setBaseTime(timestampNow);\r\n        //\r\n        // //synchronous, so start calculation will work\r\n        // this.setState({\r\n        //     baseTime: baseTime,\r\n        //     baseTimeInput: baseTime\r\n        // },() => {\r\n        //     this.startCalculation();\r\n        //     // console.log('new state', this.state);\r\n        // });\r\n    }\r\n\r\n    resetCalculator() {\r\n\r\n        let addends = {\r\n            seconds: 0,\r\n            minutes: 0,\r\n            hours: 0,\r\n            days: 0,\r\n            weeks: 0,\r\n            months: 0,\r\n            years: 0\r\n        };\r\n        this.setState({addends: addends}, this.recalculateTarget);\r\n    }\r\n\r\n    changeAddend(addend, unit) {\r\n\r\n        let addends = this.state.addends;\r\n        addends[unit] = addend;\r\n        this.setState({addends: addends});\r\n\r\n        this.recalculateTarget(); // will reset this.state.addend\r\n    }\r\n\r\n    recalculateTarget() {\r\n        let change = 0;\r\n        for (let unit in this.state.addends) {\r\n            let val = this.state.addends[unit];\r\n            switch(unit) {\r\n                case 'seconds':\r\n                    change += val;\r\n                    break;\r\n                case 'minutes':\r\n                    change += (val * 60);\r\n                    break;\r\n                case 'hours':\r\n                    change += (val * 60 * 60);\r\n                    break;\r\n                case 'days':\r\n                    change += (val * 60 * 60 * 24);\r\n                    break;\r\n                case 'weeks':\r\n                    change += (val * 60 * 60 * 24 * 7);\r\n                    break;\r\n                case 'months':\r\n                    let currentDate = new Date(this.state.baseTime * 1000);\r\n                    let targetDate = addMonth(currentDate, val);\r\n                    change += targetDate.getTime() / 1000 - currentDate.getTime() / 1000;\r\n                    break;\r\n                case 'years':\r\n                    let currentDateY = new Date(this.state.baseTime * 1000);\r\n                    let targetDateY = new Date(this.state.baseTime * 1000);\r\n                    targetDateY.setFullYear(currentDateY.getFullYear() + val);\r\n                    change += targetDateY.getTime() / 1000 - currentDateY.getTime() / 1000;\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        };\r\n\r\n        this.setState({diff: change});\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n\r\n\r\n        let classNameBaseInput = this.state.baseTimeInputValid ? \"form-control\" : \"form-control is-invalid\";\r\n        let classNameDateStringInput =  this.state.dateInputValid ? \"form-control\" : \"form-control is-invalid\";\r\n\r\n        return (\r\n            <div>\r\n                <Navbar />\r\n                <div className=\"container\">\r\n\r\n                    <h2>Date Tool</h2>\r\n\r\n                    <br/>\r\n\r\n                    <div className=\"row no-gutters\">\r\n                        <div className=\"col-3\">\r\n                            <label>Unix Timestamp</label><br/>\r\n                            <input type=\"text\" value={!isNaN(this.state.baseTimeInput) ? this.state.baseTimeInput : \"\"}\r\n                                   // ref={this.inputBaseTime}\r\n                                   ref={(input) => { this.inputBaseTime = input; }}\r\n                                   onChange={this.handleBaseTimeChange}\r\n                                   className={classNameBaseInput}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-1\"/>\r\n                        <div className=\"col-3\">\r\n                            <label>Date</label><br/>\r\n                            <input type=\"text\" value={this.state.baseTimeString}\r\n                                   onChange={this.handleDateStringChange}\r\n                                   className={classNameDateStringInput}/>\r\n                            <i>DD.MM.YYYY HH:MM:SS</i>\r\n\r\n                        </div>\r\n                        <div className=\"col-1\"/>\r\n                        <div className=\"col-1\">\r\n                            <br/>\r\n                            <button type=\"button\" className=\"btn btn-primary\" onClick={this.startCalculation}>calculate</button>\r\n                        </div>\r\n                        <div className=\"col-1\">\r\n                            <br/>\r\n                            <button type=\"button\" className=\"btn btn-secondary\" onClick={this.setBaseTimeNow}>now</button>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n\r\n\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            <DateOutput datetime={this.state.baseTime}/>\r\n                        </div>\r\n\r\n                        <div className=\"col dateOutput\">\r\n\r\n                            <DateCalculator unit=\"seconds\" val={this.state.addends.seconds} changeAddend={this.changeAddend.bind(this)}/>\r\n                            <DateCalculator unit=\"minutes\" reset={this.resetCalculator} val={this.state.addends.minutes} changeAddend={this.changeAddend.bind(this)}/>\r\n                            <DateCalculator unit=\"hours\" reset={this.resetCalculator} val={this.state.addends.hours} changeAddend={this.changeAddend.bind(this)}/>\r\n                            <DateCalculator unit=\"days\" reset={this.resetCalculator} val={this.state.addends.days} changeAddend={this.changeAddend.bind(this)}/>\r\n                            <DateCalculator unit=\"weeks\" reset={this.resetCalculator} val={this.state.addends.weeks} changeAddend={this.changeAddend.bind(this)}/>\r\n                            <DateCalculator unit=\"months\" reset={this.resetCalculator} val={this.state.addends.months} changeAddend={this.changeAddend.bind(this)}/>\r\n                            <DateCalculator unit=\"years\" reset={this.resetCalculator} val={this.state.addends.years} changeAddend={this.changeAddend.bind(this)}/>\r\n\r\n                            <br/>\r\n                            <div className=\"text-center\">\r\n                                <button type=\"button\"  className=\"btn btn-secondary\" onClick={this.resetCalculator.bind(this)}>reset</button>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"col\">\r\n                            <DateOutput  datetime={this.state.baseTime + this.state.diff} />\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nDateTool.defaultProps = {baseTime: 0}\r\nexport default DateTool","import React from 'react'\r\nimport Navbar from \"../navbar/Navbar\";\r\n\r\n\r\nclass Base64Decoder extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            input: \"\",\r\n            output: \"\",\r\n            option: 0, // 0 = decode // 1 = encode\r\n            inputValid: true\r\n        }\r\n\r\n    }\r\n\r\n    //Focus on Input field immediately\r\n    componentDidMount(){\r\n        this.textInput.focus();\r\n    }\r\n\r\n    handleInputChange = (e) => {\r\n        this.encodeDecodeOutput(e.target.value, this.state.option);\r\n    };\r\n\r\n    handleOptionChange = (e) => {\r\n        this.encodeDecodeOutput(this.state.input, e.target.value * 1);\r\n    };\r\n\r\n    encodeDecodeOutput(input, option) {\r\n        let output = \"\";\r\n        let inputValid = true;\r\n\r\n        // Encode btoa(string);\r\n        // Decode atob(string)\r\n        if (option  === 0) {\r\n            try {\r\n                output = atob(input);\r\n            } catch (e) {\r\n                output = \"<Input invalid>\";\r\n                inputValid = false;\r\n            }\r\n        } else {\r\n            output = btoa(input);\r\n        }\r\n\r\n        this.setState({input: input, output: output, option: option, inputValid: inputValid});\r\n    }\r\n\r\n    render() {\r\n        const classNameInput = this.state.inputValid ? \"form-control rounded-0\" : \"form-control rounded-0 is-invalid\";\r\n        return (\r\n            <div>\r\n                <Navbar/>\r\n\r\n\r\n\r\n                <div className=\"container\">\r\n                    <h2>Base 64 Encoder / Decoder</h2>\r\n\r\n\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"exampleFormControlTextarea1\"></label>\r\n                        <textarea className={classNameInput}\r\n                                  id=\"exampleFormControlTextarea1\"\r\n                                  rows=\"10\"\r\n                                  ref={(input) => { this.textInput = input; }}\r\n                                  value={this.state.input}\r\n                                  onChange={this.handleInputChange}> </textarea>\r\n                    </div>\r\n\r\n                    <div className=\"form-check form-check-inline\">\r\n                        <input className=\"form-check-input\" type=\"radio\" id=\"inlineCheckbox1\" value=\"0\"\r\n                               checked={this.state.option === 0}\r\n                               onChange={this.handleOptionChange}/>\r\n                            <label className=\"form-check-label\" htmlFor=\"inlineCheckbox1\">From Base64</label>\r\n                    </div>\r\n                    <div className=\"form-check form-check-inline\">\r\n                        <input className=\"form-check-input\" type=\"radio\" id=\"inlineCheckbox2\" value=\"1\"\r\n                               checked={this.state.option === 1}\r\n                               onChange={this.handleOptionChange}/>\r\n                            <label className=\"form-check-label\" htmlFor=\"inlineCheckbox2\">To Base64</label>\r\n                    </div>\r\n\r\n\r\n                    <div className=\"form-group\">\r\n                        <br/>\r\n                        <textarea className=\"form-control rounded-0\" id=\"exampleFormControlTextarea1\" rows=\"10\"  value={this.state.output} readOnly></textarea>\r\n                    </div>\r\n\r\n\r\n                    <div>More Info: <a href=\" https://de.wikipedia.org/wiki/Base64\">https://de.wikipedia.org/wiki/Base64</a></div>\r\n\r\n\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\nexport default Base64Decoder;","import React from 'react'\nimport Navbar from \"../navbar/Navbar\";\n\n\n/**\n * Uses https://www.npmjs.com/package/js-beautify\n *\n */\nclass Formatter extends React.Component {\n\n    \n\n    constructor(props) {\n        super(props);\n        this.state = {\n            input: '',\n            output: '',\n            inputValid: true\n        };\n        this.language = \"\";\n    }\n\n    //Focus on Input field immediately\n    componentDidMount() {\n        this.setInitialValue();\n        this.textInput.focus();\n    }\n\n    setInitialValue() {\n    }\n\n    handleInputChange = (e) => {\n        this.formatOutput(e.target.value);\n    };\n\n    // remove non-printable and other non-valid chars\n    cleanInput(input) {\n        let cleanedInput = input.replace(/\\\\n/g, \"\\\\n\")\n            .replace(/\\\\'/g, \"\\\\'\")\n            .replace(/\\\\\"/g, '\\\\\"')\n            .replace(/\\\\&/g, \"\\\\&\")\n            .replace(/\\\\r/g, \"\\\\r\")\n            .replace(/\\\\t/g, \"\\\\t\")\n            .replace(/\\\\b/g, \"\\\\b\")\n            .replace(/\\\\f/g, \"\\\\f\");\n        // eslint-disable-next-line\n        cleanedInput = cleanedInput.replace(/[\\u0000-\\u0019]+/g, \"\");\n        return cleanedInput;\n    }\n\n\n    formatOutput(input) {\n        let output = input;\n        let inputValid = true;\n        this.setState({ input: input, output: output, inputValid: inputValid });\n    }\n\n    \n    // createMarkup() {\n    //     return { __html: this.state.output };\n    // };\n\n    render() {\n        const classNameInput = this.state.inputValid ? \"form-control rounded-0\" : \"form-control rounded-0 is-invalid\";\n        return (\n            <div>\n                <Navbar />\n\n                <div className=\"container\">\n                    <h2>{this.language} Formatter</h2>\n\n\n                    <div className=\"form-group\">\n                        <label htmlFor=\"inputTextarea\">Input ({this.language}):</label>\n                        <textarea className={classNameInput}\n                            id=\"inputTextarea\"\n                            rows=\"10\"\n                            ref={(input) => { this.textInput = input; }}\n                            value={this.state.input}\n                            onChange={this.handleInputChange} />\n                    </div>\n\n                    <div className=\"form-group\">\n                        <br />\n                        <textarea className={classNameInput}\n                                rows=\"10\"\n                                value={this.state.output} />\n                        \n                        {/* \n                        <pre className=\"formatterOutput\" contentEditable='true' dangerouslySetInnerHTML={this.createMarkup()}></pre>\n                        */}\n                    </div> \n\n\n\n\n                </div>\n            </div>\n        )\n\n    }\n}\nexport default Formatter;","import Formatter from './Formatter'\r\n\r\n\r\n/**\r\n * Uses https://www.npmjs.com/package/js-beautify\r\n *\r\n */\r\nclass JSONFormatter extends Formatter {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.language = 'JSON';\r\n    }\r\n\r\n    setInitialValue() {\r\n        this.formatOutput('{\"a\":1, \"b\":\"foo\", \"c\":[false,\"false\",null,\"null\", {\"d\":{\"e\":1.3e5,\"f\":\"1.3e5\"}}]}');\r\n    }\r\n\r\n\r\n    prettyPrint(jsonObj) {\r\n        return (JSON.stringify(jsonObj, undefined, 4));\r\n    }\r\n\r\n    syntaxHighlight(jsonString) {\r\n\r\n        // syntax highlight\r\n        jsonString = jsonString.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\r\n        //return json.replace(/(\"(\\\\u[a-zA-Z0-9]{4}|\\\\[^u]|[^\\\\\"])*\"(\\s*:)?|\\b(true|false|null)\\b|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?)/g, function (match) {\r\n\r\n\r\n        // eslint-disable-next-line\r\n        return jsonString.replace(/('(\\\\u[a-zA-Z0-9]{4}|\\\\[^u]|[^\\\\\"])*'(\\s*:)?|\\b(true|false|null)\\b|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?)/g, function (match) {\r\n            let cls = 'number';\r\n            if (/^\"/.test(match)) {\r\n                if (/:$/.test(match)) {\r\n                    cls = 'key';\r\n                } else {\r\n                    cls = 'string';\r\n                }\r\n            } else if (/^'/.test(match)) {\r\n                if (/:$/.test(match)) {\r\n                    cls = 'key';\r\n                } else {\r\n                    cls = 'string';\r\n                }\r\n            } else if (/true|false/.test(match)) {\r\n                cls = 'boolean';\r\n            } else if (/null/.test(match)) {\r\n                cls = 'null';\r\n            }\r\n            return '<span class=\"' + cls + '\">' + match + '</span>';\r\n        });\r\n    }\r\n\r\n\r\n    formatOutput(input) {\r\n        let output = \"\";\r\n        let inputValid = true;\r\n\r\n        try {\r\n            input = this.cleanInput(input);\r\n            let jsonObj = JSON.parse(input);\r\n            output = this.prettyPrint(jsonObj);\r\n            //output = this.syntaxHighlight(this.prettyPrint(jsonObj));\r\n        } catch (e) {\r\n            this.inputValid = false;\r\n            output = \"<b>Invalid JSON:</b> <br>\" + e;\r\n        }\r\n\r\n        this.setState({ input: input, output: output, inputValid: inputValid });\r\n    }\r\n}\r\nexport default JSONFormatter;","import Formatter from \"./Formatter\"\r\n\r\n/**\r\n * Uses https://www.npmjs.com/package/js-beautify\r\n *\r\n */\r\nclass XMLFormatter extends Formatter {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.language = 'XML';\r\n    }\r\n\r\n    setInitialValue() {\r\n        this.formatOutput('<input><field1 attribute1=\"test\"><field2>Test</field2></field1></input>');\r\n    }\r\n\r\n    prettyPrint(xml) {\r\n        let formatted = '', indent = '';\r\n        let tab = '\\t';\r\n        xml.split(/>\\s*</).forEach(function (node) {\r\n            console.debug(\"split \", node);\r\n            if (node.match(/^\\/\\w/)) indent = indent.substring(tab.length); // decrease indent by one 'tab'\r\n            formatted += indent + '<' + node + '>\\r\\n';\r\n            if (node.match(/^<?\\w[^>]*[^]$/)) indent += tab;              // increase indent\r\n        });\r\n        return formatted.substring(1, formatted.length - 3);\r\n    }\r\n\r\n    formatOutput(input) {\r\n        let output = \"\";\r\n        let inputValid = true;\r\n\r\n        try {\r\n            output = this.prettyPrint(this.cleanInput(input));\r\n        } catch (e) {\r\n            this.inputValid = false;\r\n            output = \"<b>Invalid XML:</b> <br>\" + e;\r\n        };\r\n\r\n        this.setState({ input: input, output: output, inputValid: inputValid });\r\n    }\r\n}\r\nexport default XMLFormatter;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Route, BrowserRouter as Router } from 'react-router-dom'\n\nimport './index.css';\n\nimport * as serviceWorker from './serviceWorker';\n\nimport App from './App';\nimport Converter from './tools/Converter';\nimport Generator from './tools/Generator';\nimport DateTool from './datetool/DateTool';\nimport Base64Decoder from './decoder/Base64Decoder';\nimport JSONFormatter from \"./formatter/JSONFormatter\";\nimport XMLFormatter from \"./formatter/XMLFormatter\";\n\n\n\n\n//Generated Code:\n//ReactDOM.render(<App />, document.getElementById('root'));\n\n//Ab hier Routing\nconst routing = (\n\n    <Router basename={'/utils'}>\n        \n            <Route exact path=\"/\" component={App} />\n            <Route exact path={`${process.env.PUBLIC_URL}/datetool`} component={DateTool} />\n            <Route path=\"/converter/\" component={Converter} />\n            <Route exact path=\"/generator\" component={Generator} />\n            <Route path={`${process.env.PUBLIC_URL}/base64decoder`} component={Base64Decoder} />\n            <Route path={`${process.env.PUBLIC_URL}/json`} component={JSONFormatter} />\n            <Route path={`${process.env.PUBLIC_URL}/xml`} component={XMLFormatter} />\n    </Router>\n)\n\nReactDOM.render(routing, document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n"],"sourceRoot":""}